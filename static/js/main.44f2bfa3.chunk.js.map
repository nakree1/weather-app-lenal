{"version":3,"sources":["img/SpinnerGear.svg","components/Forecast/Items/ForecastStateIcon.jsx","components/Forecast/Items/ForecastDay.jsx","components/Forecast/Items/ForecastDetails.jsx","components/_common/Preloader.jsx","components/Forecast/Forecast.jsx","components/_actions/CurrentDateActions.js","components/Forecast/ForecastContainer.js","config/api.js","components/_actions/LocationActions.js","components/Location/Location.jsx","utils/getGeolocation.js","components/Location/LocationContainer.js","components/Notes/Items/AddNoteButton.jsx","components/Notes/Items/EditNoteArea.jsx","components/Notes/Notes.jsx","components/_actions/NotesActions.js","components/Notes/NotesContainer.js","components/Wrapper/Wrapper.jsx","components/App.jsx","components/_reducers/LocationSearchReducer.js","components/_actions/ForecastActions.js","components/_reducers/ForecastReducer.js","utils/getId.js","components/_reducers/NotesReducer.js","components/_reducers/CurrentDateReducer.js","components/rootReducer.js","components/rootSaga.js","index.js"],"names":["module","exports","__webpack_require__","p","ForecastStateIcon","_ref","icon","state","react_default","a","createElement","className","ForecastDay","handleSelect","_this","props","selectCurrentDate","data","applicable_date","_this$props$data","this","weather_state_name","weather_state_abbr","the_temp","wind_speed","isActive","date","moment","concat","onClick","format","toFixed","React","Component","ForecastDetails","_this$props","currentDate","weather","find","item","momentDate","max_temp","min_temp","humidity","Preloader","_ref$height","height","src","preloaderImg","style","alt","PreloaderImg","_ref2","_ref2$height","Forecast","status","weekForecast","map","day","ForecastDay_ForecastDay","key","id","ForecastDetails_ForecastDetails","createRoutine","connect","forecast","path","api","getLocationByQuery","query","axios","get","getLocationByCoords","lat","lng","getForecastByCityId","searchHintsWorker","currentLocationWorker","locationSearchWatcher","fetchSearchHints","fetchCurrentLocation","selectLocation","payload","res","regenerator_default","wrap","_context","prev","next","put","request","call","delay","decodeURI","sent","success","slice","failure","t0","console","error","stop","_marked","city","_context2","woeid","title","_marked2","_context3","all","takeLatest","TRIGGER","_marked3","Location","showDropdown","openDropdown","setState","document","addEventListener","closeDropdown","e","_e$target$dataset","target","dataset","classList","contains","clearHints","log","removeEventListener","selectByKey","hints","length","getLocation","currentTarget","value","successCallback","localStorage","getItem","JSON","parse","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","errorCallback","prevProps","_this$props2","list","hint","data-title","data-id","type","onChange","onKeyPress","placeholder","fulfill","location","search","currentLocation","AddNoteButton","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","addNote","input","current","createNote","createRef","ref","EditNoteArea","isEditable","toggleEdit","prevState","handleSave","save","selected","text","react","onBlur","defaultValue","Notes","handleDelete","clearSelection","deleteNote","saveNote","_this2","isLoaded","selectNote","sidebarItems","AddNoteButton_AddNoteButton","EditNoteArea_EditNoteArea","notes","Wrapper","children","App","LocationContainer","ForecastContainer","NotesContainer","handleActions","_handleActions","defineProperty","actions","REQUEST","SUCCESS","FAILURE","FULFILL","_handleActions2","_handleActions3","_ref3","_ref4","_handleActions4","_ref5","_ref6","combineReducers","getForecastWorker","forecastWatcher","fetchForecast","trigger","consolidated_weather","ForecastActions_marked","ForecastActions_marked2","weekStatus","ForecastReducer_handleActions","weekData","ForecastReducer_handleActions2","countGenerator","num","counter","_args","arguments","undefined","getId_marked","getId","gen","getIdGenerator","NotesReducer_handleActions","NotesReducer_handleActions2","objectSpread","toConsumableArray","filter","copyArr","index","findIndex","CurrentDateReducer_handleActions","rootReducer","rootSaga","fork","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","subscribe","getState","setItem","stringify","ReactDOM","render","es","components_App","getElementById"],"mappings":"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","file":"static/js/main.44f2bfa3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SpinnerGear.ee33b51a.svg\";","import React from 'react';\r\n\r\nexport default function ForecastStateIcon({ state }) {\r\n  let icon;\r\n\r\n  switch (state) {\r\n    case 'sn':\r\n      icon = 'far fa-snowflake';\r\n      break;\r\n    case 'sl':\r\n      icon = 'fas fa-smog';\r\n      break;\r\n    case 'h':\r\n      icon = 'fas fa-cloud-meatball';\r\n      break;\r\n    case 't':\r\n      icon = 'fas fa-bolt';\r\n      break;\r\n    case 'hr':\r\n      icon = 'fas fa-cloud-showers-heavy';\r\n      break;\r\n    case 'lr':\r\n      icon = 'fas fa-cloud-showers-heavy';\r\n      break;\r\n    case 's':\r\n      icon = 'fas fa-cloud-sun-rain';\r\n      break;\r\n    case 'hc':\r\n      icon = 'fas fa-cloud';\r\n      break;\r\n    case 'lc':\r\n      icon = 'fas fa-cloud-sun';\r\n      break;\r\n    case 'c':\r\n      icon = 'fas fa-sun';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className=\"icon_wrap\">\r\n      <i className={icon} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport ForecastStateIcon from './ForecastStateIcon';\r\n\r\nexport default class ForecastDay extends React.Component {\r\n  handleSelect = () => {\r\n    this.props.selectCurrentDate(this.props.data.applicable_date);\r\n  };\r\n\r\n  render() {\r\n    const { applicable_date, weather_state_name, weather_state_abbr, the_temp, wind_speed } = this.props.data;\r\n    const { isActive } = this.props;\r\n\r\n    const date = moment(applicable_date, 'YYYY-MM-DD');\r\n    return (\r\n      <div className={`forecast__day ${isActive ? 'active' : ''}`} onClick={this.handleSelect}>\r\n        <div className=\"forecast__item forecast__item_header\">{date.format('dddd')}</div>\r\n        <div className=\"forecast__item\">\r\n          <div className=\"icon_wrap\">\r\n            <i className=\"far fa-calendar-alt\" />\r\n          </div>\r\n          <span className=\"forecast__content\">{date.format('MMM D')}</span>\r\n        </div>\r\n        <div className=\"forecast__item\">\r\n          <ForecastStateIcon state={weather_state_abbr} />\r\n          <span className=\"forecast__content\">{weather_state_name}</span>\r\n        </div>\r\n        <div className=\"forecast__item\">\r\n          <div className=\"icon_wrap\">\r\n            <i className=\"fas fa-thermometer-half\" />\r\n          </div>\r\n          <span className=\"forecast__content\">{the_temp.toFixed()} °C</span>\r\n        </div>\r\n        <div className=\"forecast__item\">\r\n          <div className=\"icon_wrap\">\r\n            <i className=\"fas fa-wind\" />\r\n          </div>\r\n          <span className=\"forecast__content\">{wind_speed.toFixed(1)} mph</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport ForecastStateIcon from './ForecastStateIcon';\r\n\r\nexport default class ForecastDetails extends React.Component {\r\n  render() {\r\n    const { currentDate, data } = this.props;\r\n\r\n    if (!currentDate) return null;\r\n\r\n    const weather = data.find(item => item.applicable_date === currentDate);\r\n\r\n    const momentDate = moment(currentDate, 'YYYY-MM-DD');\r\n\r\n    return (\r\n      <div className=\"forecast__details\">\r\n        <div className=\"forecast__block forecast__block-column\">\r\n          <div className=\"forecast__block-day\">{momentDate.format('dddd')}</div>\r\n          <div className=\"forecast__block-date\">{momentDate.format('MMMM D, YYYY')}</div>\r\n        </div>\r\n\r\n        <div className=\"forecast__block forecast__block-column\">\r\n          <div className=\"forecast__block-temp\">Max: {weather.max_temp.toFixed(1)} °C</div>\r\n          <div className=\"forecast__block-temp\">Min: {weather.min_temp.toFixed(1)} °C</div>\r\n          <div className=\"forecast__block-temp\">Wind: {weather.wind_speed.toFixed(1)} mph</div>\r\n          <div className=\"forecast__block-humidity\">Humidity: {weather.humidity.toFixed(1)} %</div>\r\n        </div>\r\n        <div className=\"forecast__block forecast__block-column\">\r\n          <div className=\"forecast__block-state\">\r\n            <div className=\"forecast__block-current_temp\">\r\n              {weather.the_temp.toFixed(1)} °C\r\n              <br />\r\n              {weather.weather_state_name}\r\n            </div>\r\n            <ForecastStateIcon state={weather.weather_state_abbr} />\r\n          </div>\r\n\r\n          <div className=\"forecast__block-wind\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport preloaderImg from '../../img/SpinnerGear.svg';\r\n\r\nexport default function Preloader({ height = 100 }) {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <img src={preloaderImg} style={{ height: height + 'px' }} alt=\"Loading...\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function PreloaderImg({ height = 100 }) {\r\n  return <img src={preloaderImg} style={{ height: height + 'px' }} alt=\"Loading...\" />;\r\n}\r\n","import React from 'react';\r\nimport ForecastDay from './Items/ForecastDay';\r\nimport ForecastDetails from './Items/ForecastDetails';\r\nimport Preloader from '../_common/Preloader';\r\n\r\nexport default class Forecast extends React.Component {\r\n  render() {\r\n    const { data, status, selectCurrentDate, currentDate } = this.props;\r\n\r\n    if (status === 'request') return <Preloader />;\r\n    if (status !== 'success') return null;\r\n\r\n    const weekForecast = data.map(day => (\r\n      <ForecastDay\r\n        data={day}\r\n        key={day.id}\r\n        selectCurrentDate={selectCurrentDate}\r\n        isActive={currentDate === day.applicable_date}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"forecast\">\r\n        <div className=\"forecast__week\">{weekForecast}</div>\r\n        <ForecastDetails currentDate={currentDate} data={data} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { createRoutine } from 'redux-saga-routines';\r\n\r\nexport const selectCurrentDate = createRoutine('CURRENT_DATE_SELECT');\r\n","import { connect } from 'react-redux';\r\nimport Forecast from './Forecast';\r\nimport { selectCurrentDate } from '../_actions/CurrentDateActions';\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.forecast.data,\r\n  status: state.forecast.status,\r\n  currentDate: state.currentDate,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { selectCurrentDate }\r\n)(Forecast);\r\n","import axios from 'axios'\r\n\r\nconst path = 'https://cors-anywhere.herokuapp.com/https://www.metaweather.com';\r\n// for bypass cors\r\n\r\nconst api = {\r\n  getLocationByQuery: (query) => axios.get(`${path}/api/location/search/?query=${query}`),\r\n  getLocationByCoords: ({lat, lng}) => axios.get(`${path}/api/location/search/?lattlong=${lat},${lng}`),\r\n  getForecastByCityId: (id) => axios.get(`${path}/api/location/${id}/`),\r\n};\r\n\r\nexport default api","import { createRoutine } from 'redux-saga-routines';\r\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport { delay } from 'redux-saga';\r\nimport api from '../../config/api';\r\n\r\nexport const fetchSearchHints = createRoutine('SEARCH_HINTS_FETCH');\r\nexport const fetchCurrentLocation = createRoutine('CURRENT_LOCATION_FETCH');\r\nexport const selectLocation = createRoutine('LOCATION_SELECT');\r\n\r\nfunction* searchHintsWorker({ payload }) {\r\n  yield put(fetchSearchHints.request());\r\n  yield call(delay, 300);\r\n  try {\r\n    const res = yield call(() => api.getLocationByQuery(decodeURI(payload)));\r\n    if (res.status === 200) {\r\n      yield put(fetchSearchHints.success(res.data.slice(0, 6)));\r\n    } else {\r\n      yield put(fetchSearchHints.failure());\r\n    }\r\n  } catch (e) {\r\n    yield put(fetchSearchHints.failure());\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* currentLocationWorker({ payload }) {\r\n  yield put(fetchCurrentLocation.request());\r\n  try {\r\n    const res = yield call(() => api.getLocationByCoords(payload));\r\n    const city = res.data[0];\r\n    if (res.status === 200 && city) {\r\n      yield put(\r\n        fetchCurrentLocation.success({\r\n          id: city.woeid,\r\n          title: city.title,\r\n        })\r\n      );\r\n    } else {\r\n      yield put(fetchCurrentLocation.failure());\r\n    }\r\n  } catch (e) {\r\n    yield put(fetchSearchHints.failure());\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nexport function* locationSearchWatcher() {\r\n  yield all([\r\n    takeLatest(fetchSearchHints.TRIGGER, searchHintsWorker),\r\n    takeLatest(fetchCurrentLocation.TRIGGER, currentLocationWorker),\r\n  ]);\r\n}\r\n","import React from 'react';\r\nimport getGeolocation from '../../utils/getGeolocation';\r\nimport { PreloaderImg } from '../_common/Preloader';\r\n\r\nexport default class Location extends React.Component {\r\n  state = {\r\n    showDropdown: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!localStorage.getItem('location')) {\r\n      getGeolocation(this.props.fetchCurrentLocation);\r\n    } else {\r\n      this.props.selectLocation(JSON.parse(localStorage.getItem('location')));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { hints, query, status } = this.props;\r\n    if (prevProps.query !== query && hints.length && status === 'success') {\r\n      this.setState({\r\n        showDropdown: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('click', this.closeDropdown);\r\n  }\r\n\r\n  openDropdown = () => {\r\n    if (!this.state.showDropdown) {\r\n      this.setState({ showDropdown: true });\r\n      document.addEventListener('click', this.closeDropdown);\r\n    }\r\n  };\r\n\r\n  closeDropdown = e => {\r\n    try {\r\n      const { id, title } = e.target.dataset;\r\n      const isLi = e.target.classList.contains('dropdown__item');\r\n\r\n      if (isLi && id && title) {\r\n        this.props.selectLocation({ id, title });\r\n        this.props.clearHints();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      this.setState({ showDropdown: false });\r\n      document.removeEventListener('click', this.closeDropdown);\r\n    }\r\n  };\r\n\r\n  selectByKey = e => {\r\n    const { hints } = this.props;\r\n    if (e.key === 'Enter' && hints.length) {\r\n      this.props.selectLocation({ id: hints[0].woeid, title: hints[0].title });\r\n      this.props.clearHints();\r\n    }\r\n  };\r\n\r\n  getLocation = ({ currentTarget }) => {\r\n    this.props.fetchSearchHints(currentTarget.value);\r\n    this.openDropdown();\r\n  };\r\n\r\n  render() {\r\n    const { showDropdown } = this.state;\r\n    const { hints, query, status } = this.props;\r\n\r\n    const list = hints.map(hint => (\r\n      <li className=\"dropdown__item\" key={hint.woeid} data-title={hint.title} data-id={hint.woeid}>\r\n        {hint.title}\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"location\">\r\n        <div className=\"dropdown\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"dropdown__input\"\r\n            onChange={this.getLocation}\r\n            onClick={this.openDropdown}\r\n            onKeyPress={this.selectByKey}\r\n            value={query}\r\n            placeholder=\"Start typing...\"\r\n          />\r\n\r\n          {status === 'request' ? (\r\n            <div className=\"dropdown-preloader\">\r\n              <PreloaderImg height={25} />\r\n            </div>\r\n          ) : null}\r\n\r\n          <ul className={`dropdown__list ${hints.length && showDropdown ? 'active' : ''}`}>{hints.length && list}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function getGeolocation(successCallback) {\r\n  if ('geolocation' in navigator) {\r\n    const onGeoSuccess = ({ coords }) => {\r\n      console.log(coords);\r\n\r\n      successCallback({\r\n        lat: coords.latitude,\r\n        lng: coords.longitude,\r\n      });\r\n    };\r\n\r\n    const onGeoError = () => {\r\n      console.error('Geo permission denied');\r\n      errorCallback();\r\n    };\r\n\r\n    navigator.geolocation.getCurrentPosition(onGeoSuccess, onGeoError);\r\n  } else {\r\n    errorCallback();\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { fetchSearchHints, fetchCurrentLocation, selectLocation } from '../_actions/LocationActions';\r\nimport { selectCurrentDate } from '../_actions/CurrentDateActions';\r\nimport Location from './Location';\r\n\r\nconst mapStateToProps = state => ({\r\n  status: state.location.search.status,\r\n  query: state.location.search.query,\r\n  hints: state.location.search.hints,\r\n  currentLocation: state.location.currentLocation,\r\n});\r\n\r\nconst clearHints = fetchSearchHints.fulfill;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    fetchSearchHints,\r\n    fetchCurrentLocation,\r\n    clearHints,\r\n    selectLocation,\r\n    selectCurrentDate,\r\n  }\r\n)(Location);\r\n","import React from 'react';\r\n\r\nexport default class AddNoteButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  addNote = () => {\r\n    const value = this.input.current.value;\r\n\r\n    if (value) {\r\n      this.props.createNote({\r\n        date: this.props.currentDate,\r\n        title: value,\r\n      });\r\n      this.input.current.value = '';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notes__item notes__item-container\">\r\n        <input type=\"text\" className=\"notes__item-input\" ref={this.input} />\r\n        <button className=\"notes__item-button\" onClick={this.addNote}>\r\n          Add\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\nexport default class EditNoteArea extends React.Component {\r\n  state = {\r\n    isEditable: false,\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    this.setState(prevState => ({\r\n      isEditable: !prevState.isEditable,\r\n    }));\r\n  };\r\n\r\n  handleSave = ({ currentTarget }) => {\r\n    this.props.save(currentTarget.value);\r\n    this.toggleEdit();\r\n  };\r\n\r\n  render() {\r\n    const { isEditable } = this.state;\r\n    const { data, selected } = this.props;\r\n\r\n    if (!selected) return <div className=\"notes-text notes__text-info\">Select note</div>;\r\n\r\n    const text = data.find(item => item.id === selected).text;\r\n\r\n    return (\r\n      <Fragment>\r\n        {isEditable ? (\r\n          <textarea\r\n            className=\"notes__text notes__text-input\"\r\n            onBlur={this.handleSave}\r\n            defaultValue={text}\r\n            placeholder=\"Start typing...\"\r\n          />\r\n        ) : (\r\n          <div className={`notes__text ${!text.length ? 'notes__text-info' : ''}`} onClick={this.toggleEdit}>\r\n            {text || 'Click to edit'}\r\n          </div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport AddNoteButton from './Items/AddNoteButton';\r\nimport EditNoteArea from './Items/EditNoteArea';\r\n\r\nexport default class Notes extends React.Component {\r\n  handleDelete = id => {\r\n    if (id === this.props.selected) {\r\n      this.props.clearSelection();\r\n    }\r\n\r\n    this.props.deleteNote({\r\n      id: id,\r\n      date: this.props.currentDate,\r\n    });\r\n  };\r\n\r\n  handleSave = value => {\r\n    this.props.saveNote({\r\n      date: this.props.currentDate,\r\n      id: this.props.selected,\r\n      text: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isLoaded, data, createNote, currentDate, selectNote, selected } = this.props;\r\n    if (!isLoaded) return null;\r\n\r\n    const sidebarItems = data.map(item => (\r\n      <div className={`notes__item ${item.id === selected ? 'active' : ''}`} key={item.id}>\r\n        <span className=\"notes__item-text\" onClick={() => selectNote(item.id)}>\r\n          {item.title}\r\n        </span>\r\n        <div className=\"icon_wrap\" onClick={() => this.handleDelete(item.id)}>\r\n          <i className=\"fas fa-times\" />\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"notes\">\r\n        <div className=\"notes__sidebar\">\r\n          {sidebarItems}\r\n          <AddNoteButton createNote={createNote} currentDate={currentDate} />\r\n        </div>\r\n        <div className=\"notes__content\">\r\n          <EditNoteArea data={data} selected={selected} save={this.handleSave} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { createRoutine } from 'redux-saga-routines';\r\n\r\nexport const selectNote = createRoutine('NOTE_SELECT');\r\nexport const createNote = createRoutine('NOTE_CREATE');\r\nexport const deleteNote = createRoutine('NOTE_DELETE');\r\nexport const saveNote = createRoutine('NOTE_SAVE');\r\n","import { connect } from 'react-redux';\r\nimport Notes from './Notes';\r\nimport { createNote, deleteNote, saveNote, selectNote } from '../_actions/NotesActions';\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoaded: state.currentDate !== '',\r\n  selected: state.notes.selected,\r\n  data: state.notes.data[state.currentDate] || [],\r\n  currentDate: state.currentDate,\r\n});\r\n\r\nconst clearSelection = selectNote.fulfill;\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNote, deleteNote, saveNote, selectNote, clearSelection }\r\n)(Notes);\r\n","import React, { Fragment } from 'react';\r\n\r\nexport default function Wrapper({ children }) {\r\n  return (\r\n    <Fragment>\r\n      <header className=\"header\">Weather App</header>\r\n      <section className=\"container\">\r\n        <div className=\"content\">{children}</div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ForecastContainer from './Forecast/ForecastContainer';\r\nimport LocationContainer from './Location/LocationContainer';\r\nimport NotesContainer from './Notes/NotesContainer';\r\nimport Wrapper from './Wrapper/Wrapper';\r\nimport '../scss/index.scss';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <LocationContainer />\r\n        <ForecastContainer />\r\n        <NotesContainer />\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nimport * as actions from '../_actions/LocationActions';\r\n\r\nconst status = handleActions(\r\n  {\r\n    [actions.fetchSearchHints.REQUEST]() {\r\n      return 'request';\r\n    },\r\n    [actions.fetchSearchHints.SUCCESS]() {\r\n      return 'success';\r\n    },\r\n    [actions.fetchSearchHints.FAILURE]() {\r\n      return 'failure';\r\n    },\r\n    [actions.fetchSearchHints.FULFILL]() {\r\n      return 'none';\r\n    },\r\n  },\r\n  'none'\r\n);\r\n\r\nconst hints = handleActions(\r\n  {\r\n    [actions.fetchSearchHints.TRIGGER]() {\r\n      return [];\r\n    },\r\n    [actions.fetchSearchHints.SUCCESS](state, { payload }) {\r\n      return payload;\r\n    },\r\n    [actions.fetchSearchHints.FULFILL]() {\r\n      return [];\r\n    },\r\n  },\r\n  []\r\n);\r\n\r\nconst query = handleActions(\r\n  {\r\n    [actions.fetchSearchHints.TRIGGER](state, { payload }) {\r\n      return payload;\r\n    },\r\n    [actions.selectLocation.TRIGGER](state, { payload }) {\r\n      return payload.title;\r\n    },\r\n    [actions.fetchCurrentLocation.SUCCESS](state, { payload }) {\r\n      return payload.title;\r\n    },\r\n  },\r\n  localStorage.getItem('location') ? JSON.parse(localStorage.getItem('location')).title : ''\r\n);\r\n\r\nconst currentLocation = handleActions(\r\n  {\r\n    [actions.selectLocation.TRIGGER](state, { payload }) {\r\n      return {\r\n        id: payload.id,\r\n        title: payload.title,\r\n      };\r\n    },\r\n    [actions.fetchCurrentLocation.SUCCESS](state, { payload }) {\r\n      return {\r\n        id: payload.id,\r\n        title: payload.title,\r\n      };\r\n    },\r\n  },\r\n  { id: '', title: '' }\r\n);\r\n\r\nconst search = combineReducers({\r\n  status,\r\n  hints,\r\n  query,\r\n});\r\n\r\nconst location = combineReducers({\r\n  search,\r\n  currentLocation,\r\n});\r\n\r\nexport default location;\r\n","import { createRoutine } from 'redux-saga-routines';\r\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport api from '../../config/api';\r\nimport { selectLocation, fetchCurrentLocation } from './LocationActions';\r\nimport { selectCurrentDate } from './CurrentDateActions';\r\n\r\nexport const fetchForecast = createRoutine('FORECAST_FETCH');\r\n\r\nfunction* getForecastWorker({ payload }) {\r\n  yield put(fetchForecast.request());\r\n  yield put(selectCurrentDate.trigger());\r\n  try {\r\n    const res = yield call(() => api.getForecastByCityId(payload.id));\r\n    if (res.status === 200) {\r\n      const weather = res.data.consolidated_weather;\r\n      yield put(fetchForecast.success(weather));\r\n      yield put(selectCurrentDate.trigger(weather[0].applicable_date));\r\n    } else {\r\n      console.error(res);\r\n      yield put(fetchForecast.failure());\r\n    }\r\n  } catch (e) {\r\n    yield put(fetchForecast.failure());\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nexport function* forecastWatcher() {\r\n  yield all([\r\n    takeLatest(selectLocation.TRIGGER, getForecastWorker),\r\n    takeLatest(fetchCurrentLocation.SUCCESS, getForecastWorker),\r\n  ]);\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nimport * as actions from '../_actions/ForecastActions';\r\n\r\nconst weekStatus = handleActions(\r\n  {\r\n    [actions.fetchForecast.REQUEST]() {\r\n      return 'request';\r\n    },\r\n    [actions.fetchForecast.SUCCESS]() {\r\n      return 'success';\r\n    },\r\n    [actions.fetchForecast.FAILURE]() {\r\n      return 'failure';\r\n    },\r\n  },\r\n  'none'\r\n);\r\n\r\nconst weekData = handleActions(\r\n  {\r\n    [actions.fetchForecast.SUCCESS](state, { payload }) {\r\n      return payload;\r\n    },\r\n    [actions.fetchForecast.FAILURE]() {\r\n      return [];\r\n    },\r\n  },\r\n  []\r\n);\r\n\r\nconst forecast = combineReducers({\r\n  status: weekStatus,\r\n  data: weekData,\r\n});\r\n\r\nexport default forecast;\r\n","function* countGenerator(num = 1) {\r\n  let counter = num;\r\n  while (true) {\r\n    yield counter++;\r\n  }\r\n}\r\n\r\nfunction getIdGenerator() {\r\n  const gen = countGenerator();\r\n  return function() {\r\n    const id = gen.next().value;\r\n    console.log('Generated new id: ' + id);\r\n    return id;\r\n  };\r\n}\r\n\r\nconst getId = getIdGenerator();\r\n\r\nexport default getId;\r\n","import { handleActions } from 'redux-actions';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport * as actions from '../_actions/NotesActions';\r\nimport { selectCurrentDate } from '../_actions/CurrentDateActions';\r\n\r\nimport getId from '../../utils/getId';\r\n\r\nconst selected = handleActions(\r\n  {\r\n    [actions.selectNote.TRIGGER](state, { payload }) {\r\n      return payload;\r\n    },\r\n    [actions.selectNote.FULFILL]() {\r\n      return null;\r\n    },\r\n    [selectCurrentDate.TRIGGER]() {\r\n      return null;\r\n    },\r\n    [selectCurrentDate.FULFILL]() {\r\n      return null;\r\n    },\r\n  },\r\n  null\r\n);\r\n\r\nconst data = handleActions(\r\n  {\r\n    [actions.createNote.TRIGGER](state, { payload }) {\r\n      if (state[payload.date]) {\r\n        return {\r\n          ...state,\r\n          [payload.date]: [...state[payload.date], { id: getId(), title: payload.title, text: '' }],\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [payload.date]: [{ id: getId(), title: payload.title, text: '' }],\r\n        };\r\n      }\r\n    },\r\n    [actions.deleteNote.TRIGGER](state, { payload }) {\r\n      if (state[payload.date]) {\r\n        return {\r\n          ...state,\r\n          [payload.date]: state[payload.date].filter(item => item.id !== payload.id),\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    },\r\n    [actions.saveNote.TRIGGER](state, { payload }) {\r\n      if (state[payload.date]) {\r\n        const copyArr = [...state[payload.date]];\r\n        const index = copyArr.findIndex(item => item.id === payload.id);\r\n        copyArr[index] = {\r\n          ...copyArr[index],\r\n          text: payload.text,\r\n        };\r\n        return {\r\n          ...state,\r\n          [payload.date]: copyArr,\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    },\r\n  },\r\n  JSON.parse(localStorage.getItem('notes')) || {}\r\n);\r\n\r\nconst notes = combineReducers({\r\n  selected,\r\n  data,\r\n});\r\n\r\nexport default notes;\r\n","import { handleActions } from 'redux-actions';\r\n\r\nimport * as actions from '../_actions/CurrentDateActions';\r\n\r\nconst currentDate = handleActions(\r\n  {\r\n    [actions.selectCurrentDate.TRIGGER](state, { payload }) {\r\n      return payload;\r\n    },\r\n    [actions.selectCurrentDate.FULFILL]() {\r\n      return '';\r\n    },\r\n  },\r\n  ''\r\n);\r\n\r\nexport default currentDate;\r\n","import { combineReducers } from 'redux';\r\nimport location from './_reducers/LocationSearchReducer';\r\nimport forecast from './_reducers/ForecastReducer';\r\nimport notes from './_reducers/NotesReducer';\r\nimport currentDate from './_reducers/CurrentDateReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  currentDate,\r\n  location,\r\n  forecast,\r\n  notes,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { all, fork } from 'redux-saga/effects';\r\nimport { locationSearchWatcher } from './_actions/LocationActions';\r\nimport { forecastWatcher } from './_actions/ForecastActions';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(locationSearchWatcher), fork(forecastWatcher)]);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport App from './components/App';\r\nimport rootReducer from './components/rootReducer';\r\nimport rootSaga from './components/rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nstore.subscribe(() => {\r\n  const state = store.getState();\r\n\r\n  localStorage.setItem('location', JSON.stringify(state.location.currentLocation));\r\n  localStorage.setItem('notes', JSON.stringify(state.notes.data));\r\n});\r\n\r\nconst render = () => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n  );\r\n};\r\n\r\nrender();\r\n"],"sourceRoot":""}