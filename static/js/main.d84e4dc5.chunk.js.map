{"version":3,"sources":["components/Forecast/Items/ForecastStateIcon.jsx","components/Forecast/Items/ForecastDay.jsx","components/Forecast/Items/ForecastDetails.jsx","components/Forecast/Forecast.jsx","components/_actions/CurrentDateActions.js","components/Forecast/ForecastContainer.js","config/api.js","components/_actions/LocationActions.js","components/Location/Location.jsx","utils/getGeolocation.js","components/Location/LocationContainer.js","components/Notes/Items/AddNoteButton.jsx","components/Notes/Items/EditNoteArea.jsx","components/Notes/Notes.jsx","components/_actions/NotesActions.js","components/Notes/NotesContainer.js","components/Main/Main.jsx","components/Wrapper/Wrapper.jsx","components/App.jsx","components/_reducers/LocationSearchReducer.js","components/_actions/ForecastActions.js","components/_reducers/ForecastReducer.js","utils/getId.js","components/_reducers/NotesReducer.js","components/_reducers/CurrentDateReducer.js","components/rootReducer.js","components/rootSaga.js","index.js"],"names":["ForecastStateIcon","_ref","icon","state","react_default","a","createElement","className","ForecastDay","handleSelect","_this","props","selectCurrentDate","data","applicable_date","_this$props$data","this","weather_state_name","weather_state_abbr","the_temp","wind_speed","isActive","date","moment","concat","onClick","format","toFixed","React","Component","ForecastDetails","_this$props","currentDate","weather","find","item","momentDate","max_temp","min_temp","humidity","Forecast","status","weekForecast","map","day","ForecastDay_ForecastDay","key","id","ForecastDetails_ForecastDetails","createRoutine","connect","forecast","week","path","api","getLocationByQuery","query","axios","get","getLocationByCoords","lat","lng","getForecastByCityId","searchHintsWorker","currentLocationWorker","locationSearchWatcher","fetchSearchHints","fetchCurrentLocation","selectLocation","payload","res","regenerator_default","wrap","_context","prev","next","put","request","call","delay","decodeURI","sent","success","slice","failure","t0","console","error","stop","_marked","_ref2","city","_context2","woeid","title","_marked2","_context3","all","takeLatest","TRIGGER","_marked3","Location","showDropdown","openDropdown","setState","document","addEventListener","closeDropdown","e","_e$target$dataset","target","dataset","classList","contains","clearHints","log","removeEventListener","selectByKey","hints","length","getLocation","currentTarget","value","successCallback","errorCallback","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","prevProps","_this$props2","list","hint","data-title","data-id","type","onChange","onKeyPress","placeholder","fulfill","location","search","currentLocation","AddNoteButton","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","addNote","input","current","createNote","createRef","ref","EditNoteArea","isEditable","toggleEdit","prevState","handleSave","save","selected","text","react","onBlur","defaultValue","Notes","handleDelete","clearSelection","deleteNote","saveNote","_this2","isLoaded","selectNote","sidebarItems","AddNoteButton_AddNoteButton","EditNoteArea_EditNoteArea","notes","Main","LocationContainer","ForecastContainer","NotesContainer","Wrapper","children","App","Main_Main","handleActions","_handleActions","defineProperty","actions","REQUEST","SUCCESS","FAILURE","FULFILL","_handleActions2","_handleActions3","_ref3","_ref4","_handleActions4","_ref5","_ref6","combineReducers","getForecastWorker","forecastWatcher","fetchForecast","trigger","consolidated_weather","ForecastActions_marked","ForecastActions_marked2","weekStatus","ForecastReducer_handleActions","weekData","ForecastReducer_handleActions2","countGenerator","num","counter","_args","arguments","undefined","getId_marked","getId","gen","getIdGenerator","mockData","2018-12-23","2018-12-25","NotesReducer_handleActions","NotesReducer_handleActions2","objectSpread","toConsumableArray","filter","copyArr","index","findIndex","CurrentDateReducer_handleActions","rootReducer","rootSaga","fork","rootSaga_marked","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","es","components_App","getElementById"],"mappings":"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","file":"static/js/main.d84e4dc5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function ForecastStateIcon({ state }) {\r\n  let icon;\r\n\r\n  switch (state) {\r\n    case 'sn':\r\n      icon = 'far fa-snowflake';\r\n      break;\r\n    case 'sl':\r\n      icon = 'fas fa-smog';\r\n      break;\r\n    case 'h':\r\n      icon = 'fas fa-cloud-meatball';\r\n      break;\r\n    case 't':\r\n      icon = 'fas fa-bolt';\r\n      break;\r\n    case 'hr':\r\n      icon = 'fas fa-cloud-showers-heavy';\r\n      break;\r\n    case 'lr':\r\n      icon = 'fas fa-cloud-showers-heavy';\r\n      break;\r\n    case 's':\r\n      icon = 'fas fa-cloud-sun-rain';\r\n      break;\r\n    case 'hc':\r\n      icon = 'fas fa-cloud';\r\n      break;\r\n    case 'lc':\r\n      icon = 'fas fa-cloud-sun';\r\n      break;\r\n    case 'c':\r\n      icon = 'fas fa-sun';\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className=\"icon_wrap\">\r\n      <i className={icon} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport ForecastStateIcon from './ForecastStateIcon';\r\n\r\nexport default class ForecastDay extends React.Component {\r\n  handleSelect = () => {\r\n    this.props.selectCurrentDate(this.props.data.applicable_date);\r\n  };\r\n\r\n  render() {\r\n    const { applicable_date, weather_state_name, weather_state_abbr, the_temp, wind_speed } = this.props.data;\r\n    const { isActive } = this.props;\r\n\r\n    const date = moment(applicable_date, 'YYYY-MM-DD');\r\n    return (\r\n      <div className={`forecast__day ${isActive ? 'active' : ''}`} onClick={this.handleSelect}>\r\n        <div className=\"forecast__item forecast__item_header\">{date.format('dddd')}</div>\r\n        <div className=\"forecast__item\">\r\n          <div className=\"icon_wrap\">\r\n            <i className=\"far fa-calendar-alt\" />\r\n          </div>\r\n          <span className=\"forecast__content\">{date.format('MMM D')}</span>\r\n        </div>\r\n        <div className=\"forecast__item\">\r\n          <ForecastStateIcon state={weather_state_abbr} />\r\n          <span className=\"forecast__content\">{weather_state_name}</span>\r\n        </div>\r\n        <div className=\"forecast__item\">\r\n          <div className=\"icon_wrap\">\r\n            <i className=\"fas fa-thermometer-half\" />\r\n          </div>\r\n          <span className=\"forecast__content\">{the_temp.toFixed()} °C</span>\r\n        </div>\r\n        <div className=\"forecast__item\">\r\n          <div className=\"icon_wrap\">\r\n            <i className=\"fas fa-wind\" />\r\n          </div>\r\n          <span className=\"forecast__content\">{wind_speed.toFixed(1)} mph</span>\r\n        </div>\r\n        {/*<div className=\"forecast__item forecast__item_temp\">{max_temp.toFixed()} C</div>*/}\r\n        {/*<div className=\"forecast__item forecast__item_humidity\">{humidity}</div>*/}\r\n        {/*<div className=\"forecast__item forecast__item_wind\">2 m/s</div>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport moment from 'moment';\r\nimport ForecastStateIcon from './ForecastStateIcon';\r\n\r\nexport default class ForecastDetails extends React.Component {\r\n  render() {\r\n    const { currentDate, data } = this.props;\r\n\r\n    if (!currentDate) return null;\r\n\r\n    const weather = data.find(item => item.applicable_date === currentDate);\r\n\r\n    const momentDate = moment(currentDate, 'YYYY-MM-DD');\r\n\r\n    return (\r\n      <div className=\"forecast__details\">\r\n        <div className=\"forecast__block forecast__block-column\">\r\n          <div className=\"forecast__block-day\">{momentDate.format('dddd')}</div>\r\n          <div className=\"forecast__block-date\">{momentDate.format('MMMM D, YYYY')}</div>\r\n        </div>\r\n\r\n        <div className=\"forecast__block forecast__block-column\">\r\n          <div className=\"forecast__block-temp\">Max: {weather.max_temp.toFixed(1)} °C</div>\r\n          <div className=\"forecast__block-temp\">Min: {weather.min_temp.toFixed(1)} °C</div>\r\n          <div className=\"forecast__block-temp\">Wind: {weather.wind_speed.toFixed(1)} mph</div>\r\n          <div className=\"forecast__block-humidity\">Humidity: {weather.humidity.toFixed(1)} %</div>\r\n        </div>\r\n        <div className=\"forecast__block forecast__block-column\">\r\n          <div className=\"forecast__block-state\">\r\n            <div className=\"forecast__block-current_temp\">\r\n              {weather.the_temp.toFixed(1)} °C\r\n              <br />\r\n              {weather.weather_state_name}\r\n            </div>\r\n            <ForecastStateIcon state={weather.weather_state_abbr} />\r\n          </div>\r\n\r\n          <div className=\"forecast__block-wind\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ForecastDay from './Items/ForecastDay';\r\nimport ForecastDetails from './Items/ForecastDetails';\r\n\r\nexport default class Forecast extends React.Component {\r\n  render() {\r\n    const { data, status, selectCurrentDate, currentDate } = this.props;\r\n\r\n    if (status !== 'success') return null;\r\n\r\n    const weekForecast = data.map(day => (\r\n      <ForecastDay\r\n        data={day}\r\n        key={day.id}\r\n        selectCurrentDate={selectCurrentDate}\r\n        isActive={currentDate === day.applicable_date}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"forecast\">\r\n        <div className=\"forecast__week\">{weekForecast}</div>\r\n        <ForecastDetails currentDate={currentDate} data={data} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { createRoutine } from 'redux-saga-routines';\r\n\r\nexport const selectCurrentDate = createRoutine('CURRENT_DATE_SELECT');\r\n","import { connect } from 'react-redux';\r\nimport Forecast from './Forecast';\r\nimport { selectCurrentDate } from '../_actions/CurrentDateActions';\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.forecast.week.data,\r\n  status: state.forecast.week.status,\r\n  currentDate: state.currentDate,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { selectCurrentDate }\r\n)(Forecast);\r\n","import axios from 'axios'\r\n\r\nconst path = 'https://cors-anywhere.herokuapp.com/https://www.metaweather.com';\r\n// for bypass cors\r\n\r\nconst api = {\r\n  getLocationByQuery: (query) => axios.get(`${path}/api/location/search/?query=${query}`),\r\n  getLocationByCoords: ({lat, lng}) => axios.get(`${path}/api/location/search/?lattlong=${lat},${lng}`),\r\n  getForecastByCityId: (id) => axios.get(`${path}/api/location/${id}/`),\r\n};\r\n\r\nexport default api","import { createRoutine } from 'redux-saga-routines';\r\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport { delay } from 'redux-saga';\r\nimport api from '../../config/api';\r\n\r\nexport const fetchSearchHints = createRoutine('SEARCH_HINTS_FETCH');\r\nexport const fetchCurrentLocation = createRoutine('CURRENT_LOCATION_FETCH');\r\nexport const selectLocation = createRoutine('LOCATION_SELECT');\r\n\r\nfunction* searchHintsWorker({ payload }) {\r\n  yield put(fetchSearchHints.request());\r\n  yield call(delay, 300);\r\n  try {\r\n    const res = yield call(() => api.getLocationByQuery(decodeURI(payload)));\r\n    if (res.status === 200) {\r\n      yield put(fetchSearchHints.success(res.data.slice(0, 6)));\r\n    } else {\r\n      yield put(fetchSearchHints.failure());\r\n    }\r\n  } catch (e) {\r\n    yield put(fetchSearchHints.failure());\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction* currentLocationWorker({ payload }) {\r\n  yield put(fetchCurrentLocation.request());\r\n  try {\r\n    const res = yield call(() => api.getLocationByCoords(payload));\r\n    const city = res.data[0];\r\n    if (res.status === 200 && city) {\r\n      yield put(\r\n        fetchCurrentLocation.success({\r\n          id: city.woeid,\r\n          title: city.title,\r\n        })\r\n      );\r\n    } else {\r\n      yield put(fetchCurrentLocation.failure());\r\n    }\r\n  } catch (e) {\r\n    yield put(fetchSearchHints.failure());\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nexport function* locationSearchWatcher() {\r\n  yield all([\r\n    takeLatest(fetchSearchHints.TRIGGER, searchHintsWorker),\r\n    takeLatest(fetchCurrentLocation.TRIGGER, currentLocationWorker),\r\n  ]);\r\n}\r\n","import React from 'react';\r\nimport getGeolocation from '../../utils/getGeolocation';\r\n\r\nexport default class Location extends React.Component {\r\n  state = {\r\n    showDropdown: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    getGeolocation(this.props.fetchCurrentLocation, () => {});\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { hints, query, status } = this.props;\r\n    if (prevProps.query !== query && hints.length && status === 'success') {\r\n      this.setState({\r\n        showDropdown: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('click', this.closeDropdown);\r\n  }\r\n\r\n  openDropdown = () => {\r\n    if (!this.state.showDropdown) {\r\n      this.setState({ showDropdown: true });\r\n      document.addEventListener('click', this.closeDropdown);\r\n    }\r\n  };\r\n\r\n  closeDropdown = e => {\r\n    try {\r\n      const { id, title } = e.target.dataset;\r\n      const isLi = e.target.classList.contains('dropdown__item');\r\n\r\n      if (isLi && id && title) {\r\n        this.props.selectLocation({ id, title });\r\n        this.props.clearHints();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      this.setState({ showDropdown: false });\r\n      document.removeEventListener('click', this.closeDropdown);\r\n    }\r\n  };\r\n\r\n  selectByKey = e => {\r\n    const { hints } = this.props;\r\n    if (e.key === 'Enter' && hints.length) {\r\n      this.props.selectLocation({ id: hints[0].woeid, title: hints[0].title });\r\n      this.props.clearHints();\r\n    }\r\n  };\r\n\r\n  getLocation = ({ currentTarget }) => {\r\n    this.props.fetchSearchHints(currentTarget.value);\r\n    this.openDropdown();\r\n  };\r\n\r\n  render() {\r\n    const { showDropdown } = this.state;\r\n    const { hints, query } = this.props;\r\n\r\n    const list = hints.map(hint => (\r\n      <li className=\"dropdown__item\" key={hint.woeid} data-title={hint.title} data-id={hint.woeid}>\r\n        {hint.title}\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"location\">\r\n        {/*<div className=\"location__label\">Location:</div>*/}\r\n        <div className=\"dropdown\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"dropdown__input\"\r\n            onChange={this.getLocation}\r\n            onClick={this.openDropdown}\r\n            onKeyPress={this.selectByKey}\r\n            value={query}\r\n            placeholder=\"Start typing...\"\r\n          />\r\n\r\n          <ul className={`dropdown__list ${hints.length && showDropdown ? 'active' : ''}`}>{hints.length && list}</ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function getGeolocation(successCallback, errorCallback) {\r\n  if ('geolocation' in navigator) {\r\n    const onGeoSuccess = ({ coords }) => {\r\n      console.log(coords);\r\n\r\n      successCallback({\r\n        lat: coords.latitude,\r\n        lng: coords.longitude,\r\n      });\r\n    };\r\n\r\n    const onGeoError = () => {\r\n      console.error('Geo permission denied');\r\n      errorCallback();\r\n    };\r\n\r\n    navigator.geolocation.getCurrentPosition(onGeoSuccess, onGeoError);\r\n  } else {\r\n    errorCallback();\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport { fetchSearchHints, fetchCurrentLocation, selectLocation } from '../_actions/LocationActions';\r\nimport { selectCurrentDate } from '../_actions/CurrentDateActions';\r\nimport Location from './Location';\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  status: state.location.search.status,\r\n  query: state.location.search.query,\r\n  hints: state.location.search.hints,\r\n  currentLocation: state.location.currentLocation,\r\n});\r\n\r\nconst clearHints = fetchSearchHints.fulfill;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    fetchSearchHints,\r\n    fetchCurrentLocation,\r\n    clearHints,\r\n    selectLocation,\r\n    selectCurrentDate,\r\n  }\r\n)(Location);\r\n","import React from 'react';\r\n\r\nexport default class AddNoteButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  addNote = () => {\r\n    const value = this.input.current.value;\r\n\r\n    if (value) {\r\n      this.props.createNote({\r\n        date: this.props.currentDate,\r\n        title: value,\r\n      });\r\n      this.input.current.value = '';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notes__item notes__item-container\">\r\n        <input type=\"text\" className=\"notes__item-input\" ref={this.input} />\r\n        <button className=\"notes__item-button\" onClick={this.addNote}>\r\n          Add\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\nexport default class EditNoteArea extends React.Component {\r\n  state = {\r\n    isEditable: false,\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    this.setState(prevState => ({\r\n      isEditable: !prevState.isEditable,\r\n    }));\r\n  };\r\n\r\n  handleSave = ({ currentTarget }) => {\r\n    this.props.save(currentTarget.value);\r\n    this.toggleEdit();\r\n  };\r\n\r\n  render() {\r\n    const { isEditable } = this.state;\r\n    const { data, selected } = this.props;\r\n\r\n    if (!selected) return <div className=\"notes-text notes__text-info\">Select note</div>;\r\n\r\n    const text = data.find(item => item.id === selected).text;\r\n\r\n    return (\r\n      <Fragment>\r\n        {isEditable ? (\r\n          <textarea\r\n            className=\"notes__text notes__text-input\"\r\n            onBlur={this.handleSave}\r\n            defaultValue={text}\r\n            placeholder=\"Start typing...\"\r\n          />\r\n        ) : (\r\n          <div className={`notes__text ${!text.length ? 'notes__text-info' : ''}`} onClick={this.toggleEdit}>\r\n            {text || 'Click to edit'}\r\n          </div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport AddNoteButton from './Items/AddNoteButton';\r\nimport EditNoteArea from './Items/EditNoteArea';\r\n\r\nexport default class Notes extends React.Component {\r\n  handleDelete = id => {\r\n    if (id === this.props.selected) {\r\n      this.props.clearSelection();\r\n    }\r\n\r\n    this.props.deleteNote({\r\n      id: id,\r\n      date: this.props.currentDate,\r\n    });\r\n  };\r\n\r\n  handleSave = value => {\r\n    this.props.saveNote({\r\n      date: this.props.currentDate,\r\n      id: this.props.selected,\r\n      text: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isLoaded, data, createNote, currentDate, deleteNote, saveNote, selectNote, selected } = this.props;\r\n    if (!isLoaded) return null;\r\n\r\n    const sidebarItems = data.map(item => (\r\n      <div className={`notes__item ${item.id === selected ? 'active' : ''}`} key={item.id}>\r\n        <span className=\"notes__item-text\" onClick={() => selectNote(item.id)}>\r\n          {item.title}\r\n        </span>\r\n        <div className=\"icon_wrap\" onClick={() => this.handleDelete(item.id)}>\r\n          <i className=\"fas fa-times\" />\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"notes\">\r\n        <div className=\"notes__sidebar\">\r\n          {sidebarItems}\r\n          <AddNoteButton createNote={createNote} currentDate={currentDate} />\r\n        </div>\r\n        <div className=\"notes__content\">\r\n          <EditNoteArea data={data} selected={selected} save={this.handleSave} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { createRoutine } from 'redux-saga-routines';\r\n\r\nexport const selectNote = createRoutine('NOTE_SELECT');\r\nexport const createNote = createRoutine('NOTE_CREATE');\r\nexport const deleteNote = createRoutine('NOTE_DELETE');\r\nexport const saveNote = createRoutine('NOTE_SAVE');\r\n","import { connect } from 'react-redux';\r\nimport Notes from './Notes';\r\nimport { createNote, deleteNote, saveNote, selectNote } from '../_actions/NotesActions';\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoaded: state.currentDate !== '',\r\n  selected: state.notes.selected,\r\n  data: state.notes.data[state.currentDate] || [],\r\n  currentDate: state.currentDate,\r\n});\r\n\r\nconst clearSelection = selectNote.fulfill;\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNote, deleteNote, saveNote, selectNote, clearSelection }\r\n)(Notes);\r\n","import React from 'react';\r\nimport ForecastContainer from '../Forecast/ForecastContainer';\r\nimport LocationContainer from '../Location/LocationContainer';\r\nimport NotesContainer from '../Notes/NotesContainer';\r\n\r\nexport default class Main extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <LocationContainer />\r\n        <ForecastContainer />\r\n        <NotesContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\nexport default function Wrapper({ children }) {\r\n  return (\r\n    <Fragment>\r\n      <header className=\"header\">Weather App</header>\r\n      <section className=\"container\">{children}</section>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport '../scss/index.scss';\r\nimport Main from './Main/Main';\r\nimport Wrapper from './Wrapper/Wrapper';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Main />\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nimport * as actions from '../_actions/LocationActions';\r\n\r\nconst status = handleActions(\r\n  {\r\n    [actions.fetchSearchHints.REQUEST]() {\r\n      return 'request';\r\n    },\r\n    [actions.fetchSearchHints.SUCCESS]() {\r\n      return 'success';\r\n    },\r\n    [actions.fetchSearchHints.FAILURE]() {\r\n      return 'failure';\r\n    },\r\n    [actions.fetchSearchHints.FULFILL]() {\r\n      return 'none';\r\n    },\r\n  },\r\n  'none'\r\n);\r\n\r\nconst hints = handleActions(\r\n  {\r\n    [actions.fetchSearchHints.TRIGGER]() {\r\n      return [];\r\n    },\r\n    [actions.fetchSearchHints.SUCCESS](state, { payload }) {\r\n      return payload;\r\n    },\r\n    [actions.fetchSearchHints.FULFILL]() {\r\n      return [];\r\n    },\r\n  },\r\n  []\r\n);\r\n\r\nconst query = handleActions(\r\n  {\r\n    [actions.fetchSearchHints.TRIGGER](state, { payload }) {\r\n      return payload;\r\n    },\r\n    [actions.selectLocation.TRIGGER](state, { payload }) {\r\n      return payload.title;\r\n    },\r\n    [actions.fetchCurrentLocation.SUCCESS](state, { payload }) {\r\n      return payload.title;\r\n    },\r\n  },\r\n  ''\r\n);\r\n\r\nconst currentLocation = handleActions(\r\n  {\r\n    [actions.selectLocation.TRIGGER](state, { payload }) {\r\n      return {\r\n        id: payload.id,\r\n        title: payload.title,\r\n      };\r\n    },\r\n    [actions.fetchCurrentLocation.SUCCESS](state, { payload }) {\r\n      return {\r\n        id: payload.id,\r\n        title: payload.title,\r\n      };\r\n    },\r\n  },\r\n  { id: '', title: '' }\r\n);\r\n\r\nconst search = combineReducers({\r\n  status,\r\n  hints,\r\n  query,\r\n});\r\n\r\nconst location = combineReducers({\r\n  search,\r\n  currentLocation,\r\n});\r\n\r\nexport default location;\r\n","import { createRoutine } from 'redux-saga-routines';\r\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport api from '../../config/api';\r\nimport { selectLocation, fetchCurrentLocation } from './LocationActions';\r\nimport { selectCurrentDate } from './CurrentDateActions';\r\n\r\nexport const fetchForecast = createRoutine('FORECAST_FETCH');\r\n\r\nfunction* getForecastWorker({ payload }) {\r\n  yield put(fetchForecast.fulfill());\r\n  yield put(selectCurrentDate.trigger());\r\n  try {\r\n    const res = yield call(() => api.getForecastByCityId(payload.id));\r\n    if (res.status === 200) {\r\n      const weather = res.data.consolidated_weather;\r\n      yield put(fetchForecast.success(weather));\r\n      yield put(selectCurrentDate.trigger(weather[0].applicable_date));\r\n    } else {\r\n      console.error(res);\r\n      yield put(fetchForecast.failure());\r\n    }\r\n  } catch (e) {\r\n    yield put(fetchForecast.failure());\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nexport function* forecastWatcher() {\r\n  yield all([\r\n    takeLatest(selectLocation.TRIGGER, getForecastWorker),\r\n    takeLatest(fetchCurrentLocation.SUCCESS, getForecastWorker),\r\n  ]);\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\n\r\nimport * as actions from '../_actions/ForecastActions';\r\n\r\nconst weekStatus = handleActions(\r\n  {\r\n    [actions.fetchForecast.REQUEST]() {\r\n      return 'request';\r\n    },\r\n    [actions.fetchForecast.SUCCESS]() {\r\n      return 'success';\r\n    },\r\n    [actions.fetchForecast.FAILURE]() {\r\n      return 'failure';\r\n    },\r\n  },\r\n  'none'\r\n);\r\n\r\nconst weekData = handleActions(\r\n  {\r\n    [actions.fetchForecast.SUCCESS](state, { payload }) {\r\n      return payload;\r\n    },\r\n    [actions.fetchForecast.FAILURE]() {\r\n      return [];\r\n    },\r\n  },\r\n  []\r\n);\r\n\r\nconst week = combineReducers({\r\n  status: weekStatus,\r\n  data: weekData,\r\n});\r\n\r\nconst forecast = combineReducers({\r\n  week,\r\n});\r\n\r\nexport default forecast;\r\n","function* countGenerator(num = 1) {\r\n  let counter = num;\r\n  while (true) {\r\n    yield counter++;\r\n  }\r\n}\r\n\r\nfunction getIdGenerator() {\r\n  const gen = countGenerator();\r\n  return function() {\r\n    const id = gen.next().value;\r\n    console.log('Generated new id: ' + id);\r\n    return id;\r\n  };\r\n}\r\n\r\nconst getId = getIdGenerator();\r\n\r\nexport default getId;\r\n","import { handleActions } from 'redux-actions';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport * as actions from '../_actions/NotesActions';\r\nimport { selectCurrentDate } from '../_actions/CurrentDateActions';\r\n\r\nimport getId from '../../utils/getId';\r\n\r\nconst mockData = {\r\n  '2018-12-23': [\r\n    { id: getId(), title: 'Header text', text: 'some note text' },\r\n    { id: getId(), title: 'Second note', text: 'Some second note text' },\r\n  ],\r\n  '2018-12-25': [{ id: getId(), title: 'Lorem ipsum', text: 'Solor menum' }],\r\n};\r\n\r\nconst isLoaded = handleActions({}, true);\r\n\r\nconst selected = handleActions(\r\n  {\r\n    [actions.selectNote.TRIGGER](state, { payload }) {\r\n      return payload;\r\n    },\r\n    [actions.selectNote.FULFILL]() {\r\n      return null;\r\n    },\r\n    [selectCurrentDate.TRIGGER]() {\r\n      return null;\r\n    },\r\n    [selectCurrentDate.FULFILL]() {\r\n      return null;\r\n    },\r\n  },\r\n  null\r\n);\r\n\r\nconst data = handleActions(\r\n  {\r\n    [actions.createNote.TRIGGER](state, { payload }) {\r\n      if (state[payload.date]) {\r\n        return {\r\n          ...state,\r\n          [payload.date]: [...state[payload.date], { id: getId(), title: payload.title, text: '' }],\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [payload.date]: [{ id: getId(), title: payload.title, text: '' }],\r\n        };\r\n      }\r\n    },\r\n    [actions.deleteNote.TRIGGER](state, { payload }) {\r\n      if (state[payload.date]) {\r\n        return {\r\n          ...state,\r\n          [payload.date]: state[payload.date].filter(item => item.id !== payload.id),\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    },\r\n    [actions.saveNote.TRIGGER](state, { payload }) {\r\n      if (state[payload.date]) {\r\n        const copyArr = [...state[payload.date]];\r\n        const index = copyArr.findIndex(item => item.id === payload.id);\r\n        copyArr[index] = {\r\n          ...copyArr[index],\r\n          text: payload.text,\r\n        };\r\n        return {\r\n          ...state,\r\n          [payload.date]: copyArr,\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    },\r\n  },\r\n  mockData\r\n);\r\n\r\n/*\r\ndata = {\r\n    '2018-12-23': [\r\n      { title: 'Header text', text: 'some note text' },\r\n      { title: 'Second note', text: 'Some second note text' }\r\n    ],\r\n    '2018-12-25': [\r\n      { title: 'Lorem ipsum', text: 'Solor menum' }\r\n    ]\r\n}\r\n*/\r\n\r\nconst notes = combineReducers({\r\n  isLoaded,\r\n  selected,\r\n  data,\r\n});\r\n\r\nexport default notes;\r\n","import { handleActions } from 'redux-actions';\r\n\r\nimport * as actions from '../_actions/CurrentDateActions';\r\n\r\nconst currentDate = handleActions(\r\n  {\r\n    [actions.selectCurrentDate.TRIGGER](state, { payload }) {\r\n      return payload;\r\n    },\r\n    [actions.selectCurrentDate.FULFILL]() {\r\n      return '';\r\n    },\r\n  },\r\n  ''\r\n);\r\n\r\nexport default currentDate;\r\n","import { combineReducers } from 'redux';\r\nimport location from './_reducers/LocationSearchReducer';\r\nimport forecast from './_reducers/ForecastReducer';\r\nimport notes from './_reducers/NotesReducer';\r\nimport currentDate from './_reducers/CurrentDateReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  currentDate,\r\n  location,\r\n  forecast,\r\n  notes,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { all, fork } from 'redux-saga/effects';\r\nimport { locationSearchWatcher } from './_actions/LocationActions';\r\nimport { forecastWatcher } from './_actions/ForecastActions';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(locationSearchWatcher), fork(forecastWatcher)]);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport App from './components/App';\r\nimport rootReducer from './components/rootReducer';\r\nimport rootSaga from './components/rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nconst render = () => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n  );\r\n};\r\n\r\nrender();\r\n"],"sourceRoot":""}